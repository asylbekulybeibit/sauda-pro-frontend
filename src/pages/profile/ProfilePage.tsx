import { useState, useEffect } from 'react';
import { motion } from 'framer-motion';
import { useNavigate } from 'react-router-dom';
import { PersonalInfoForm } from '@/components/profile/PersonalInfoForm';
import PendingInvites from '@/components/invites/PendingInvites';
import { useRoleStore, UserRole } from '@/store/roleStore';
import { useAuthStore } from '@/store/authStore';
import { getProfile } from '@/services/api';

export default function ProfilePage() {
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [userRoles, setUserRoles] = useState<UserRole[]>([]);
  const [isSuperAdmin, setIsSuperAdmin] = useState(false);
  const { setCurrentRole } = useRoleStore();
  const { logout } = useAuthStore();
  const navigate = useNavigate();

  useEffect(() => {
    const loadUserData = async () => {
      try {
        setIsLoading(true);
        const profile = await getProfile();
        console.log('–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è:', profile);
        console.log('–†–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', profile.roles);
        setIsSuperAdmin(profile.isSuperAdmin);
        setUserRoles(profile.roles || []);
      } catch (err) {
        setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è');
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è:', err);
      } finally {
        setIsLoading(false);
      }
    };

    loadUserData();
  }, []);

  const handleRoleSelect = (role: 'superadmin' | UserRole) => {
    if (role === 'superadmin') {
      setCurrentRole({ type: 'superadmin' });
      navigate('/admin');
    } else {
      setCurrentRole({
        type: 'shop',
        id: role.shop.id,
        role: role.role,
        shop: role.shop,
      });
      navigate(`/shop/${role.shop.id}`);
    }
  };

  const handleLogout = () => {
    logout();
    navigate('/login');
  };

  const renderRole = (role: UserRole) => {
    if (!role || !role.shop) {
      console.log('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ä–æ–ª–∏:', role);
      return null;
    }

    return (
      <motion.button
        key={role.id}
        onClick={() => handleRoleSelect(role)}
        whileHover={{ scale: 1.02 }}
        whileTap={{ scale: 0.98 }}
        className="w-full bg-white hover:bg-gray-50 rounded-xl p-6 shadow-sm cursor-pointer transition-colors"
      >
        <div className="flex items-center justify-between">
          <div>
            <h3 className="text-lg font-semibold text-gray-900">
              {role.shop.name}
            </h3>
            {role.shop.address && (
              <p className="text-sm text-gray-500 mt-1">{role.shop.address}</p>
            )}
            <p className="text-gray-500">
              {role.role === 'owner'
                ? 'üëî –í–ª–∞–¥–µ–ª–µ—Ü'
                : role.role === 'manager'
                ? 'üë®‚Äçüíº –ú–µ–Ω–µ–¥–∂–µ—Ä'
                : 'üí∞ –ö–∞—Å—Å–∏—Ä'}
            </p>
          </div>
          <div className="text-sm text-gray-500">
            {role.shop.type === 'shop'
              ? 'üè™ –ú–∞–≥–∞–∑–∏–Ω'
              : role.shop.type === 'warehouse'
              ? 'üè≠ –°–∫–ª–∞–¥'
              : 'üí≥ –¢–æ—á–∫–∞ –ø—Ä–æ–¥–∞–∂'}
          </div>
        </div>
      </motion.button>
    );
  };

  if (isLoading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-violet-600" />
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50 py-12">
      <div className="max-w-3xl mx-auto space-y-8 px-4">
        <div className="flex justify-between items-center">
          <h1 className="text-2xl font-bold text-gray-900">–ü—Ä–æ—Ñ–∏–ª—å</h1>
          <button
            onClick={handleLogout}
            className="text-red-600 hover:text-red-700 transition-colors"
          >
            –í—ã–π—Ç–∏ üö™
          </button>
        </div>

        {/* –õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ */}
        <PersonalInfoForm />

        {/* –û–∂–∏–¥–∞—é—â–∏–µ –∏–Ω–≤–∞–π—Ç—ã */}
        <PendingInvites />

        {/* –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã */}
        {isSuperAdmin && (
          <div className="space-y-4">
            <h2 className="text-xl font-semibold text-gray-900">
              –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
            </h2>
            <motion.button
              onClick={() => handleRoleSelect('superadmin')}
              whileHover={{ scale: 1.02 }}
              whileTap={{ scale: 0.98 }}
              className="w-full bg-violet-600 hover:bg-violet-700 text-white rounded-xl p-6 shadow-sm cursor-pointer transition-colors"
            >
              <div className="flex items-center justify-between">
                <div>
                  <h3 className="text-lg font-semibold">–ü–∞–Ω–µ–ª—å —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞</h3>
                  <p className="text-violet-100">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ–π —Å–∏—Å—Ç–µ–º–æ–π</p>
                </div>
                <span className="text-2xl">üëë</span>
              </div>
            </motion.button>
          </div>
        )}

        {/* –ü—Ä–æ–µ–∫—Ç—ã */}
        {userRoles.length > 0 && (
          <div className="space-y-4">
            <h2 className="text-xl font-semibold text-gray-900">–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã</h2>
            <div className="grid gap-4">
              {userRoles.map((role) => renderRole(role))}
            </div>
          </div>
        )}

        {error && (
          <div className="text-red-600 text-center p-4 bg-red-50 rounded-lg">
            {error}
          </div>
        )}
      </div>
    </div>
  );
}
