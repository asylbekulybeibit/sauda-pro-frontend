import axios from 'axios';
import { ShiftClosingData } from '../types/cashier';
// –õ–æ–∫–∞–ª—å–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ API_URL –¥–ª—è –∫–∞—Å—Å–∏—Ä—Å–∫–æ–≥–æ API
const API_URL = import.meta.env.VITE_API_URL || 'http://localhost:3000';

// –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏–∑ localStorage
// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫–ª—é—á–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
const getAuthHeader = () => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∫–ª—é—á–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–∫–µ–Ω
  const token =
    localStorage.getItem('accessToken') ||
    localStorage.getItem('token') ||
    localStorage.getItem('authToken') ||
    localStorage.getItem('access_token') ||
    localStorage.getItem('jwtToken');

  // –õ–æ–≥–∏—Ä—É–µ–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  console.log(
    'üîë –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π —Ç–æ–∫–µ–Ω –¥–ª—è –∫–∞—Å—Å–∏—Ä—Å–∫–æ–≥–æ API:',
    token ? '–¢–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω' : '–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω'
  );

  // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –∑–∞–≥–æ–ª–æ–≤–æ–∫
  if (token) {
    console.log(
      'üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –¥–ª—è –∫–∞—Å—Å–∏—Ä—Å–∫–æ–≥–æ API:',
      `Bearer ${token.substring(0, 10)}...`
    );
    return { Authorization: `Bearer ${token}` };
  } else {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∫–ª—é—á–∏ –≤ localStorage –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    console.log('üì¶ –í—Å–µ –∫–ª—é—á–∏ –≤ localStorage:', Object.keys(localStorage));
    console.error(
      '‚ö†Ô∏è –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω'
    );

    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞ –µ—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –±—Ä–∞—É–∑–µ—Ä–∞
    if (typeof window !== 'undefined') {
      console.log('üîÑ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞');
      setTimeout(() => {
        window.location.href = '/login';
      }, 2000);
    }

    return {};
  }
};

export const cashierApi = {
  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
   */
  async getCurrentUserProfile() {
    const response = await axios.get(`${API_URL}/profile`, {
      headers: getAuthHeader(),
    });
    return response.data;
  },

  /**
   * –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ —à—Ç—Ä–∏—Ö–∫–æ–¥—É –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏—é
   */
  async searchProducts(warehouseId: string, query: string) {
    const response = await axios.get(
      `${API_URL}/manager/${warehouseId}/cashier/products/search`,
      {
        params: { query },
        headers: getAuthHeader(),
      }
    );
    return response.data;
  },

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–π —Å–º–µ–Ω–µ
   */
  async getCurrentShift(warehouseId: string) {
    console.log('API: –ó–∞–ø—Ä–æ—Å —Ç–µ–∫—É—â–µ–π —Å–º–µ–Ω—ã –¥–ª—è warehouseId:', warehouseId);
    try {
      const response = await axios.get(
        `${API_URL}/manager/${warehouseId}/cashier/shift/current`,
        {
          headers: getAuthHeader(),
        }
      );
      console.log('API: –û—Ç–≤–µ—Ç API –ø–æ —Ç–µ–∫—É—â–µ–π —Å–º–µ–Ω–µ:', response.data);
      return response.data;
    } catch (error) {
      console.error('API: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–µ–∫—É—â–µ–π —Å–º–µ–Ω—ã:', error);
      throw error;
    }
  },

  /**
   * –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–∞—Å—Å–æ–≤–æ–π —Å–º–µ–Ω—ã
   */
  async openShift(
    warehouseId: string,
    data: { cashRegisterId: string; initialAmount: number }
  ) {
    console.log('API: –ó–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∏–µ —Å–º–µ–Ω—ã:', { warehouseId, data });
    const response = await axios.post(
      `${API_URL}/manager/${warehouseId}/cashier/shift/open`,
      data,
      {
        headers: getAuthHeader(),
      }
    );
    console.log('API: –û—Ç–≤–µ—Ç API –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∏–µ —Å–º–µ–Ω—ã:', response.data);
    return response.data;
  },

  /**
   * –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–∞—Å—Å–æ–≤–æ–π —Å–º–µ–Ω—ã
   */
  async closeShift(
    warehouseId: string,
    data: { shiftId: string; finalAmount: number; notes?: string }
  ): Promise<ShiftClosingData> {
    console.log('API: –ó–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏–µ —Å–º–µ–Ω—ã:', { warehouseId, data });
    try {
      const response = await axios.post<any>(
        `${API_URL}/manager/${warehouseId}/cashier/shift/close`,
        data,
        {
          headers: getAuthHeader(),
        }
      );
      console.log('API: –û—Ç–≤–µ—Ç –Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏–µ —Å–º–µ–Ω—ã:', response.data);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–æ–ª–µ–π
      if (
        !response.data.warehouse ||
        !response.data.cashRegister ||
        !response.data.cashier
      ) {
        console.error('API: –ù–µ–ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –æ—Ç–≤–µ—Ç–µ:', response.data);
        throw new Error('–ü–æ–ª—É—á–µ–Ω—ã –Ω–µ–ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞');
      }

      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
      const transformedData: ShiftClosingData = {
        ...response.data,
        initialAmount: Number(response.data.initialAmount),
        finalAmount: Number(response.data.finalAmount),
        totalSales: Number(response.data.totalSales),
        totalReturns: Math.abs(Number(response.data.totalReturns)),
        totalNet: Number(response.data.totalNet),
        paymentMethods: response.data.paymentMethods.map((method: any) => ({
          methodId: method.methodId,
          methodName: method.methodName,
          sales: Number(method.sales),
          returns: Number(method.returns),
          total: Number(method.total),
          operationType: method.operationType,
        })),
      };

      console.log('API: –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', transformedData);
      return transformedData;
    } catch (error) {
      console.error('API: –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å–º–µ–Ω—ã:', error);
      throw error;
    }
  },

  /**
   * –ü–µ—á–∞—Ç—å –æ—Ç—á–µ—Ç–∞ –æ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å–º–µ–Ω—ã
   */
  async printShiftReport(warehouseId: string, shiftId: string): Promise<void> {
    try {
      await axios.post(
        `${API_URL}/manager/${warehouseId}/cashier/shift/${shiftId}/print-report`,
        {},
        {
          headers: getAuthHeader(),
        }
      );
    } catch (error) {
      console.error('API: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—á–∞—Ç–∏ –æ—Ç—á–µ—Ç–∞ –æ —Å–º–µ–Ω–µ:', error);
      throw error;
    }
  },

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —á–µ–∫–∞
   */
  async createReceipt(
    warehouseId: string,
    data: { cashShiftId: string; cashRegisterId: string }
  ) {
    console.log('API: –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —á–µ–∫–∞:', { warehouseId, data });
    try {
      const response = await axios.post(
        `${API_URL}/manager/${warehouseId}/cashier/receipts`,
        data,
        {
          headers: getAuthHeader(),
        }
      );
      console.log('API: –ß–µ–∫ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω. –û—Ç–≤–µ—Ç:', response.data);
      return response.data;
    } catch (error: any) {
      console.error('API: –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —á–µ–∫–∞:', error);

      // –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –æ—à–∏–±–∫–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      if (axios.isAxiosError(error)) {
        if (error.response) {
          console.error('API: –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ —Å –æ—à–∏–±–∫–æ–π:', {
            status: error.response.status,
            data: error.response.data,
          });

          // –ï—Å–ª–∏ —Å–º–µ–Ω–∞ –Ω–µ –æ—Ç–∫—Ä—ã—Ç–∞, –ª–æ–≥–∏—Ä—É–µ–º —ç—Ç–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ
          if (
            error.response.status === 404 ||
            (error.response.data?.message &&
              error.response.data.message.includes('shift'))
          ) {
            console.error('API: –í–æ–∑–º–æ–∂–Ω–æ, —Å–º–µ–Ω–∞ –Ω–µ –æ—Ç–∫—Ä—ã—Ç–∞ –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
          }
        } else if (error.request) {
          console.error('API: –ó–∞–ø—Ä–æ—Å –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, –Ω–æ –æ—Ç–≤–µ—Ç –Ω–µ –ø–æ–ª—É—á–µ–Ω');
        } else {
          console.error('API: –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∑–∞–ø—Ä–æ—Å–∞:', error.message);
        }
      }

      throw error; // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–∞–ª—å—à–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ
    }
  },

  /**
   * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ —á–µ–∫
   */
  async addItemToReceipt(
    warehouseId: string,
    receiptId: string,
    data: {
      warehouseProductId: string;
      quantity: number;
      price: number;
      discountPercent?: number;
    }
  ) {
    const response = await axios.post(
      `${API_URL}/manager/${warehouseId}/cashier/receipts/${receiptId}/items`,
      data,
      {
        headers: getAuthHeader(),
      }
    );
    return response.data;
  },

  /**
   * –û–ø–ª–∞—Ç–∞ —á–µ–∫–∞
   */
  async payReceipt(
    warehouseId: string,
    receiptId: string,
    data: {
      paymentMethodId: string;
      amount: number;
    }
  ) {
    const response = await axios.post(
      `${API_URL}/manager/${warehouseId}/cashier/receipts/${receiptId}/pay`,
      data,
      {
        headers: getAuthHeader(),
      }
    );
    return response.data;
  },

  /**
   * –û—Ç–º–µ–Ω–∞ —á–µ–∫–∞
   */
  async cancelReceipt(warehouseId: string, receiptId: string) {
    const response = await axios.post(
      `${API_URL}/manager/${warehouseId}/cashier/receipts/${receiptId}/cancel`,
      {},
      {
        headers: getAuthHeader(),
      }
    );
    return response.data;
  },

  /**
   * –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏–∑ —á–µ–∫–∞
   */
  async removeItemFromReceipt(
    warehouseId: string,
    receiptId: string,
    itemId: string
  ) {
    const response = await axios.delete(
      `${API_URL}/manager/${warehouseId}/cashier/receipts/${receiptId}/items/${itemId}`,
      {
        headers: getAuthHeader(),
      }
    );
    return response.data;
  },

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —á–µ–∫–æ–≤
   */
  async getReceipts(warehouseId: string, filters?: { date?: string }) {
    try {
      // –°–æ–∑–¥–∞–µ–º URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –≤—Ä—É—á–Ω—É—é, —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∫–∞–∑ –æ—à–∏–±–æ–∫ –≤ –∫–æ–Ω—Å–æ–ª–∏
      let url = `${API_URL}/manager/${warehouseId}/cashier/receipts`;

      // –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
      if (filters?.date) {
        url += `?date=${encodeURIComponent(filters.date)}`;
      }

      console.log('API: –ù–∞—á–∞–ª–æ –∑–∞–ø—Ä–æ—Å–∞ —á–µ–∫–æ–≤');
      console.log('API: URL –∑–∞–ø—Ä–æ—Å–∞:', url);
      console.log('API: warehouseId:', warehouseId);
      console.log('API: –ó–∞–≥–æ–ª–æ–≤–∫–∏:', getAuthHeader());

      const response = await axios.get(url, {
        headers: getAuthHeader(),
        // –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫ 404 –≤ –∫–æ–Ω—Å–æ–ª–∏:
        validateStatus: function (status) {
          return status === 200 || status === 404; // 404 —Ç–∞–∫–∂–µ —Å—á–∏—Ç–∞–µ–º —É—Å–ø–µ—à–Ω—ã–º –æ—Ç–≤–µ—Ç–æ–º
        },
      });

      console.log('API: –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status);
      console.log('API: –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞:', response.data);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞
      if (response.status === 404) {
        console.log(
          'API: –ß–µ–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã (—Å—Ç–∞—Ç—É—Å 404), –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤'
        );
        return [];
      }

      console.log('API: –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç —Å–æ —Å–ø–∏—Å–∫–æ–º —á–µ–∫–æ–≤:', response.data);
      return response.data;
    } catch (error: any) {
      // –≠—Ç–∞ —á–∞—Å—Ç—å –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º, –∫—Ä–æ–º–µ 404
      console.error('API: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —á–µ–∫–æ–≤:', error);
      console.error('API: –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', {
        message: error.message,
        status: error.response?.status,
        data: error.response?.data,
        headers: error.response?.headers,
      });
      return [];
    }
  },

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π —á–µ–∫–∞
   */
  async getReceiptDetails(warehouseId: string, receiptId: string) {
    try {
      console.log('API: –ó–∞–ø—Ä–æ—Å –¥–µ—Ç–∞–ª–µ–π —á–µ–∫–∞:', { warehouseId, receiptId });

      const response = await axios.get(
        `${API_URL}/manager/${warehouseId}/cashier/receipts/${receiptId}`,
        {
          headers: getAuthHeader(),
          // –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫ 404 –≤ –∫–æ–Ω—Å–æ–ª–∏:
          validateStatus: function (status) {
            return status === 200 || status === 404; // 404 —Ç–∞–∫–∂–µ —Å—á–∏—Ç–∞–µ–º —É—Å–ø–µ—à–Ω—ã–º –æ—Ç–≤–µ—Ç–æ–º
          },
        }
      );

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞
      if (response.status === 404) {
        console.log(
          'API: –î–µ—Ç–∞–ª–∏ —á–µ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã (—Å—Ç–∞—Ç—É—Å 404), –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç'
        );
        return { items: [] };
      }

      console.log('API: –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç —Å –¥–µ—Ç–∞–ª—è–º–∏ —á–µ–∫–∞:', response.data);
      return response.data;
    } catch (error) {
      // –≠—Ç–∞ —á–∞—Å—Ç—å –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º, –∫—Ä–æ–º–µ 404
      console.error('API: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–µ—Ç–∞–ª–µ–π —á–µ–∫–∞:', error);
      return { items: [] };
    }
  },

  /**
   * –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –≤–æ–∑–≤—Ä–∞—Ç–∞ —Ç–æ–≤–∞—Ä–æ–≤
   */
  async createReturn(
    warehouseId: string,
    receiptId: string,
    data: {
      items: Array<{
        receiptItemId: string;
        quantity: number;
      }>;
      reason: string;
      paymentMethodId: string;
    }
  ) {
    const response = await axios.post(
      `${API_URL}/manager/${warehouseId}/cashier/receipts/${receiptId}/return`,
      data,
      {
        headers: getAuthHeader(),
      }
    );
    return response.data;
  },

  async createReturnWithoutReceipt(
    warehouseId: string,
    data: {
      items: Array<{
        productId: string;
        quantity: number;
        price: number;
      }>;
      reason: string;
    }
  ) {
    console.log('Creating return without receipt:', {
      warehouseId,
      data,
      itemsValid: data.items.every(
        (item) =>
          item.productId &&
          typeof item.quantity === 'number' &&
          item.quantity > 0 &&
          typeof item.price === 'number' &&
          item.price > 0
      ),
      formattedItems: data.items.map((item) => ({
        ...item,
        price: Number(Number(item.price).toFixed(2)),
        quantity: Number(item.quantity),
      })),
    });

    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
    const formattedData = {
      ...data,
      items: data.items.map((item) => ({
        ...item,
        price: Number(Number(item.price).toFixed(2)),
        quantity: Number(item.quantity),
      })),
    };

    console.log('Sending formatted data:', {
      url: `${API_URL}/manager/${warehouseId}/cashier/returns/without-receipt`,
      headers: { ...getAuthHeader(), 'Content-Type': 'application/json' },
      body: formattedData,
    });

    const response = await axios.post(
      `${API_URL}/manager/${warehouseId}/cashier/returns/without-receipt`,
      formattedData,
      {
        headers: {
          ...getAuthHeader(),
          'Content-Type': 'application/json',
        },
      }
    );
    return response.data;
  },

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–∞—Å—Å
   */
  async getCashRegisters(warehouseId: string) {
    try {
      // –ü–æ–ª—É—á–∞–µ–º –∫–∞—Å—Å—ã —á–µ—Ä–µ–∑ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç
      const response = await axios.get(
        `${API_URL}/manager/${warehouseId}/cash-registers`,
        {
          headers: getAuthHeader(),
        }
      );
      return response.data;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∞—Å—Å–æ–≤—ã—Ö –∞–ø–ø–∞—Ä–∞—Ç–æ–≤:', error);
      throw error; // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–∞–ª—å—à–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ
    }
  },

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã—Ö —á–µ–∫–æ–≤
   */
  async getPostponedReceipts(warehouseId: string) {
    try {
      const response = await axios.get(
        `${API_URL}/manager/${warehouseId}/cashier/receipts/postponed`,
        {
          headers: getAuthHeader(),
        }
      );
      return response.data;
    } catch (error) {
      console.error('API: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã—Ö —á–µ–∫–æ–≤:', error);
      return [];
    }
  },

  /**
   * –û—Ç–ª–æ–∂–∏—Ç—å —á–µ–∫
   */
  async postponeReceipt(warehouseId: string, receiptId: string) {
    const response = await axios.post(
      `${API_URL}/manager/${warehouseId}/cashier/receipts/${receiptId}/postpone`,
      {},
      {
        headers: getAuthHeader(),
      }
    );
    return response.data;
  },

  /**
   * –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–π —á–µ–∫
   */
  async restorePostponedReceipt(warehouseId: string, receiptId: string) {
    const response = await axios.post(
      `${API_URL}/manager/${warehouseId}/cashier/receipts/${receiptId}/restore`,
      {},
      {
        headers: getAuthHeader(),
      }
    );
    return response.data;
  },

  /**
   * –£–¥–∞–ª–µ–Ω–∏–µ –ø—É—Å—Ç–æ–≥–æ —á–µ–∫–∞
   */
  async deleteReceipt(warehouseId: string, receiptId: string) {
    const response = await axios.delete(
      `${API_URL}/manager/${warehouseId}/cashier/receipts/${receiptId}`,
      {
        headers: getAuthHeader(),
      }
    );
    return response.data;
  },

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤ –æ–ø–ª–∞—Ç—ã –¥–ª—è —Ç–µ–∫—É—â–µ–π –∫–∞—Å—Å—ã
   */
  async getPaymentMethods(warehouseId: string, cashRegisterId: string) {
    const response = await axios.get(
      `${API_URL}/manager/${warehouseId}/cash-registers/payment-methods`,
      {
        headers: getAuthHeader(),
      }
    );
    return response.data.filter(
      (method: { isShared: boolean; cashRegisterId: string }) =>
        method.isShared || method.cashRegisterId === cashRegisterId
    );
  },

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —á–µ–∫–∞
   */
  async getCurrentReceipt(warehouseId: string) {
    const response = await axios.get(
      `${API_URL}/manager/${warehouseId}/cashier/receipts/current`,
      {
        headers: getAuthHeader(),
      }
    );
    return response.data;
  },

  /**
   * –ü–æ–∏—Å–∫ —á–µ–∫–æ–≤ –ø–æ –Ω–æ–º–µ—Ä—É
   */
  async searchReceipts(warehouseId: string, receiptNumber: string) {
    console.log('API: –ü–æ–∏—Å–∫ —á–µ–∫–æ–≤ –ø–æ –Ω–æ–º–µ—Ä—É:', { warehouseId, receiptNumber });
    try {
      const response = await axios.get(
        `${API_URL}/manager/${warehouseId}/cashier/receipts/search?receiptNumber=${encodeURIComponent(
          receiptNumber
        )}`,
        {
          headers: getAuthHeader(),
          validateStatus: function (status) {
            return status === 200 || status === 404;
          },
        }
      );

      console.log('API: –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status);
      console.log('API: –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞:', response.data);

      if (response.status === 404) {
        console.log(
          'API: –ß–µ–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã (—Å—Ç–∞—Ç—É—Å 404), –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤'
        );
        return [];
      }

      return response.data;
    } catch (error) {
      console.error('API: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —á–µ–∫–æ–≤:', error);
      return [];
    }
  },

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —á–µ–∫–æ–≤ –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ –ø—Ä–æ–¥–∞–∂
   */
  async getSalesHistory(warehouseId: string, params: { shiftId?: string }) {
    try {
      let url = `${API_URL}/manager/${warehouseId}/cashier/receipts`;
      if (params.shiftId) {
        url += `?shiftId=${encodeURIComponent(params.shiftId)}`;
      }

      const response = await axios.get(url, {
        headers: getAuthHeader(),
        validateStatus: function (status) {
          return status === 200 || status === 404;
        },
      });

      if (response.status === 404) {
        return [];
      }

      return response.data;
    } catch (error) {
      console.error('API: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ –ø—Ä–æ–¥–∞–∂:', error);
      return [];
    }
  },

  /**
   * –ü–µ—á–∞—Ç—å —á–µ–∫–∞
   */
  async printReceipt(warehouseId: string, receiptId: string) {
    try {
      const response = await axios.post(
        `${API_URL}/manager/${warehouseId}/cashier/receipts/${receiptId}/print`,
        {},
        {
          headers: getAuthHeader(),
        }
      );
      return response.data;
    } catch (error) {
      console.error('API: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—á–∞—Ç–∏ —á–µ–∫–∞:', error);
      throw error;
    }
  },

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–µ–∫–µ
   */
  async getSalesReceiptDetails(warehouseId: string, receiptId: string) {
    try {
      const response = await axios.get(
        `${API_URL}/manager/${warehouseId}/cashier/receipts/${receiptId}`,
        {
          headers: getAuthHeader(),
          validateStatus: function (status) {
            return status === 200 || status === 404;
          },
        }
      );

      if (response.status === 404) {
        return null;
      }

      return response.data;
    } catch (error) {
      console.error('API: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–µ—Ç–∞–ª–µ–π —á–µ–∫–∞:', error);
      return null;
    }
  },

  /**
   * –ü–æ–∏—Å–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤
   */
  async searchClients(warehouseId: string, query: string) {
    const response = await axios.get(
      `${API_URL}/manager/${warehouseId}/cashier/clients`,
      {
        params: { search: query },
        headers: getAuthHeader(),
      }
    );
    return response.data;
  },

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–ª–∏–µ–Ω—Ç–µ
   */
  async getClientDetails(warehouseId: string, clientId: string) {
    const response = await axios.get(
      `${API_URL}/manager/${warehouseId}/cashier/clients/${clientId}`,
      {
        headers: getAuthHeader(),
      }
    );
    return response.data;
  },

  /**
   * –ü–æ–∏—Å–∫ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
   */
  async searchVehicles(warehouseId: string, query: string) {
    const response = await axios.get(
      `${API_URL}/manager/${warehouseId}/cashier/vehicles`,
      {
        params: { search: query },
        headers: getAuthHeader(),
      }
    );
    return response.data;
  },

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ–º–æ–±–∏–ª–µ
   */
  async getVehicleDetails(warehouseId: string, vehicleId: string) {
    const response = await axios.get(
      `${API_URL}/manager/${warehouseId}/cashier/vehicles/${vehicleId}`,
      {
        headers: getAuthHeader(),
      }
    );
    return response.data;
  },

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –∫–ª–∏–µ–Ω—Ç–∞
   */
  async getClientVehicles(warehouseId: string, clientId: string) {
    const response = await axios.get(
      `${API_URL}/manager/${warehouseId}/cashier/clients/${clientId}/vehicles`,
      {
        headers: getAuthHeader(),
      }
    );
    return response.data;
  },
};
