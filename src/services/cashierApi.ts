import axios from 'axios';
// –õ–æ–∫–∞–ª—å–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ API_URL –¥–ª—è –∫–∞—Å—Å–∏—Ä—Å–∫–æ–≥–æ API
const API_URL = import.meta.env.VITE_API_URL || 'http://localhost:3000';

// –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏–∑ localStorage
// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫–ª—é—á–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
const getAuthHeader = () => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∫–ª—é—á–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–∫–µ–Ω
  const token =
    localStorage.getItem('accessToken') ||
    localStorage.getItem('token') ||
    localStorage.getItem('authToken') ||
    localStorage.getItem('access_token') ||
    localStorage.getItem('jwtToken');

  // –õ–æ–≥–∏—Ä—É–µ–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  console.log(
    'üîë –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π —Ç–æ–∫–µ–Ω –¥–ª—è –∫–∞—Å—Å–∏—Ä—Å–∫–æ–≥–æ API:',
    token ? '–¢–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω' : '–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω'
  );

  // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –∑–∞–≥–æ–ª–æ–≤–æ–∫
  if (token) {
    console.log(
      'üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –¥–ª—è –∫–∞—Å—Å–∏—Ä—Å–∫–æ–≥–æ API:',
      `Bearer ${token.substring(0, 10)}...`
    );
    return { Authorization: `Bearer ${token}` };
  } else {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∫–ª—é—á–∏ –≤ localStorage –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    console.log('üì¶ –í—Å–µ –∫–ª—é—á–∏ –≤ localStorage:', Object.keys(localStorage));
    console.error(
      '‚ö†Ô∏è –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω'
    );

    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞ –µ—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –±—Ä–∞—É–∑–µ—Ä–∞
    if (typeof window !== 'undefined') {
      console.log('üîÑ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞');
      setTimeout(() => {
        window.location.href = '/login';
      }, 2000);
    }

    return {};
  }
};

export const cashierApi = {
  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
   */
  async getCurrentUserProfile() {
    const response = await axios.get(`${API_URL}/profile`, {
      headers: getAuthHeader(),
    });
    return response.data;
  },

  /**
   * –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ —à—Ç—Ä–∏—Ö–∫–æ–¥—É –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏—é
   */
  async searchProducts(warehouseId: string, query: string) {
    const response = await axios.get(
      `${API_URL}/manager/${warehouseId}/cashier/products/search`,
      {
        params: { query },
        headers: getAuthHeader(),
      }
    );
    return response.data;
  },

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–π —Å–º–µ–Ω–µ
   */
  async getCurrentShift(warehouseId: string) {
    console.log('API: –ó–∞–ø—Ä–æ—Å —Ç–µ–∫—É—â–µ–π —Å–º–µ–Ω—ã –¥–ª—è warehouseId:', warehouseId);
    try {
      const response = await axios.get(
        `${API_URL}/manager/${warehouseId}/cashier/shift/current`,
        {
          headers: getAuthHeader(),
        }
      );
      console.log('API: –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç —Ç–µ–∫—É—â–µ–π —Å–º–µ–Ω—ã:', response.data);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–º–µ–Ω—ã
      if (response.data) {
        // –ï—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª–µ status, –Ω–æ –µ—Å—Ç—å startTime –∏ –Ω–µ—Ç endTime, –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–∞–∫ 'open'
        if (
          !response.data.status &&
          response.data.startTime &&
          !response.data.endTime
        ) {
          console.log(
            'API: –°—Ç–∞—Ç—É—Å —Å–º–µ–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–∫ "open" –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—Ä–µ–º–µ–Ω–∏'
          );
          response.data.status = 'open';
        }
        // –ï—Å–ª–∏ –ø–æ–ª–µ status –µ—Å—Ç—å, –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º –µ–≥–æ –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
        else if (
          response.data.status &&
          typeof response.data.status === 'string'
        ) {
          console.log('API: –ò—Å—Ö–æ–¥–Ω—ã–π —Å—Ç–∞—Ç—É—Å —Å–º–µ–Ω—ã:', response.data.status);
          response.data.status = response.data.status.toLowerCase();
          console.log(
            'API: –°—Ç–∞—Ç—É—Å —Å–º–µ–Ω—ã –ø–æ—Å–ª–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è:',
            response.data.status
          );
        }
      }
      return response.data;
    } catch (error) {
      console.error('API: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–µ–∫—É—â–µ–π —Å–º–µ–Ω—ã:', error);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—à–∏–±–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ–º –æ—Ç–∫—Ä—ã—Ç–æ–π —Å–º–µ–Ω—ã (404)
      if (axios.isAxiosError(error) && error.response?.status === 404) {
        console.log('API: –û—Ç–∫—Ä—ã—Ç–∞—è —Å–º–µ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ (404)');
      }

      throw error; // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–∞–ª—å—à–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
    }
  },

  /**
   * –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–∞—Å—Å–æ–≤–æ–π —Å–º–µ–Ω—ã
   */
  async openShift(
    warehouseId: string,
    data: { cashRegisterId: string; initialAmount: number }
  ) {
    console.log('API: –ó–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∏–µ —Å–º–µ–Ω—ã:', { warehouseId, data });
    const response = await axios.post(
      `${API_URL}/manager/${warehouseId}/cashier/shift/open`,
      data,
      {
        headers: getAuthHeader(),
      }
    );
    console.log('API: –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∏–µ —Å–º–µ–Ω—ã:', response.data);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–º–µ–Ω—ã
    if (response.data) {
      // –ï—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª–µ status, –Ω–æ –µ—Å—Ç—å startTime –∏ –Ω–µ—Ç endTime, –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–∞–∫ 'open'
      if (
        !response.data.status &&
        response.data.startTime &&
        !response.data.endTime
      ) {
        console.log(
          'API: –°—Ç–∞—Ç—É—Å —Å–º–µ–Ω—ã –ø–æ—Å–ª–µ –æ—Ç–∫—Ä—ã—Ç–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º "open"'
        );
        response.data.status = 'open';
      }
      // –ï—Å–ª–∏ –ø–æ–ª–µ status –µ—Å—Ç—å, –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º –µ–≥–æ –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
      else if (
        response.data.status &&
        typeof response.data.status === 'string'
      ) {
        console.log('API: –ò—Å—Ö–æ–¥–Ω—ã–π —Å—Ç–∞—Ç—É—Å:', response.data.status);
        response.data.status = response.data.status.toLowerCase();
        console.log('API: –°—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è:', response.data.status);
      }
    }
    return response.data;
  },

  /**
   * –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–∞—Å—Å–æ–≤–æ–π —Å–º–µ–Ω—ã
   */
  async closeShift(
    warehouseId: string,
    data: { shiftId: string; finalAmount: number; notes?: string }
  ) {
    console.log('API: –ó–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏–µ —Å–º–µ–Ω—ã:', { warehouseId, data });
    try {
      const response = await axios.post(
        `${API_URL}/manager/${warehouseId}/cashier/shift/close`,
        data,
        {
          headers: getAuthHeader(),
        }
      );
      console.log('API: –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏–µ —Å–º–µ–Ω—ã:', response.data);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–º–µ–Ω—ã
      if (response.data) {
        // –ï—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª–µ status, –Ω–æ –µ—Å—Ç—å endTime, –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–∞–∫ 'closed'
        if (!response.data.status && response.data.endTime) {
          console.log(
            'API: –°—Ç–∞—Ç—É—Å –∑–∞–∫—Ä—ã—Ç–æ–π —Å–º–µ–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º "closed"'
          );
          response.data.status = 'closed';
        }
        // –ï—Å–ª–∏ –ø–æ–ª–µ status –µ—Å—Ç—å, –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º –µ–≥–æ –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
        else if (
          response.data.status &&
          typeof response.data.status === 'string'
        ) {
          console.log(
            'API: –ò—Å—Ö–æ–¥–Ω—ã–π —Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è:',
            response.data.status
          );
          response.data.status = response.data.status.toLowerCase();
          console.log(
            'API: –°—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è:',
            response.data.status
          );
        }
      }
      return response.data;
    } catch (error) {
      console.error('API: –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å–º–µ–Ω—ã:', error);
      throw error;
    }
  },

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —á–µ–∫–∞
   */
  async createReceipt(
    warehouseId: string,
    data: { cashShiftId: string; cashRegisterId: string }
  ) {
    const response = await axios.post(
      `${API_URL}/manager/${warehouseId}/cashier/receipts`,
      data,
      {
        headers: getAuthHeader(),
      }
    );
    return response.data;
  },

  /**
   * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ —á–µ–∫
   */
  async addItemToReceipt(
    warehouseId: string,
    receiptId: string,
    data: {
      warehouseProductId: string;
      quantity: number;
      price: number;
      discountPercent?: number;
    }
  ) {
    const response = await axios.post(
      `${API_URL}/manager/${warehouseId}/cashier/receipts/${receiptId}/items`,
      data,
      {
        headers: getAuthHeader(),
      }
    );
    return response.data;
  },

  /**
   * –û–ø–ª–∞—Ç–∞ —á–µ–∫–∞
   */
  async payReceipt(
    warehouseId: string,
    receiptId: string,
    data: {
      paymentMethod: string;
      amount: number;
    }
  ) {
    const response = await axios.post(
      `${API_URL}/manager/${warehouseId}/cashier/receipts/${receiptId}/pay`,
      data,
      {
        headers: getAuthHeader(),
      }
    );
    return response.data;
  },

  /**
   * –û—Ç–º–µ–Ω–∞ —á–µ–∫–∞
   */
  async cancelReceipt(warehouseId: string, receiptId: string) {
    const response = await axios.post(
      `${API_URL}/manager/${warehouseId}/cashier/receipts/${receiptId}/cancel`,
      {},
      {
        headers: getAuthHeader(),
      }
    );
    return response.data;
  },

  /**
   * –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏–∑ —á–µ–∫–∞
   */
  async removeItemFromReceipt(
    warehouseId: string,
    receiptId: string,
    itemId: string
  ) {
    const response = await axios.delete(
      `${API_URL}/manager/${warehouseId}/cashier/receipts/${receiptId}/items/${itemId}`,
      {
        headers: getAuthHeader(),
      }
    );
    return response.data;
  },

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —á–µ–∫–æ–≤
   */
  async getReceipts(warehouseId: string, filters?: { date?: string }) {
    try {
      // –°–æ–∑–¥–∞–µ–º URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –≤—Ä—É—á–Ω—É—é, —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∫–∞–∑ –æ—à–∏–±–æ–∫ –≤ –∫–æ–Ω—Å–æ–ª–∏
      let url = `${API_URL}/manager/${warehouseId}/cashier/receipts`;

      // –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
      if (filters?.date) {
        url += `?date=${encodeURIComponent(filters.date)}`;
      }

      console.log(
        'API: –ó–∞–ø—Ä–æ—Å —á–µ–∫–æ–≤ –¥–ª—è warehouseId:',
        warehouseId,
        'URL:',
        url
      );

      const response = await axios.get(url, {
        headers: getAuthHeader(),
        // –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫ 404 –≤ –∫–æ–Ω—Å–æ–ª–∏:
        validateStatus: function (status) {
          return status === 200 || status === 404; // 404 —Ç–∞–∫–∂–µ —Å—á–∏—Ç–∞–µ–º —É—Å–ø–µ—à–Ω—ã–º –æ—Ç–≤–µ—Ç–æ–º
        },
      });

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞
      if (response.status === 404) {
        console.log(
          'API: –ß–µ–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã (—Å—Ç–∞—Ç—É—Å 404), –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤'
        );
        return [];
      }

      console.log('API: –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç —Å–æ —Å–ø–∏—Å–∫–æ–º —á–µ–∫–æ–≤:', response.data);
      return response.data;
    } catch (error) {
      // –≠—Ç–∞ —á–∞—Å—Ç—å –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º, –∫—Ä–æ–º–µ 404
      console.error('API: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —á–µ–∫–æ–≤:', error);
      return [];
    }
  },

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π —á–µ–∫–∞
   */
  async getReceiptDetails(warehouseId: string, receiptId: string) {
    try {
      console.log('API: –ó–∞–ø—Ä–æ—Å –¥–µ—Ç–∞–ª–µ–π —á–µ–∫–∞:', { warehouseId, receiptId });

      const response = await axios.get(
        `${API_URL}/manager/${warehouseId}/cashier/receipts/${receiptId}`,
        {
          headers: getAuthHeader(),
          // –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫ 404 –≤ –∫–æ–Ω—Å–æ–ª–∏:
          validateStatus: function (status) {
            return status === 200 || status === 404; // 404 —Ç–∞–∫–∂–µ —Å—á–∏—Ç–∞–µ–º —É—Å–ø–µ—à–Ω—ã–º –æ—Ç–≤–µ—Ç–æ–º
          },
        }
      );

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞
      if (response.status === 404) {
        console.log(
          'API: –î–µ—Ç–∞–ª–∏ —á–µ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã (—Å—Ç–∞—Ç—É—Å 404), –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç'
        );
        return { items: [] };
      }

      console.log('API: –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç —Å –¥–µ—Ç–∞–ª—è–º–∏ —á–µ–∫–∞:', response.data);
      return response.data;
    } catch (error) {
      // –≠—Ç–∞ —á–∞—Å—Ç—å –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º, –∫—Ä–æ–º–µ 404
      console.error('API: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–µ—Ç–∞–ª–µ–π —á–µ–∫–∞:', error);
      return { items: [] };
    }
  },

  /**
   * –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –≤–æ–∑–≤—Ä–∞—Ç–∞ —Ç–æ–≤–∞—Ä–æ–≤
   */
  async createReturn(
    warehouseId: string,
    receiptId: string,
    data: {
      items: Array<{
        receiptItemId: string;
        quantity: number;
      }>;
      reason: string;
    }
  ) {
    const response = await axios.post(
      `${API_URL}/manager/${warehouseId}/cashier/receipts/${receiptId}/return`,
      data,
      {
        headers: getAuthHeader(),
      }
    );
    return response.data;
  },

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–∞—Å—Å
   */
  async getCashRegisters(warehouseId: string) {
    try {
      // –ü–æ–ª—É—á–∞–µ–º –∫–∞—Å—Å—ã —á–µ—Ä–µ–∑ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç
      const response = await axios.get(
        `${API_URL}/manager/${warehouseId}/cash-registers`,
        {
          headers: getAuthHeader(),
        }
      );
      return response.data;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∞—Å—Å–æ–≤—ã—Ö –∞–ø–ø–∞—Ä–∞—Ç–æ–≤:', error);
      throw error; // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–∞–ª—å—à–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ
    }
  },
};
