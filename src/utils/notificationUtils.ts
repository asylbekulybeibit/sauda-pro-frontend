import { api } from '@/services/api';

/**
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –¥–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ WhatsApp
 */
interface WhatsAppNotificationData {
  phoneNumber: string;
  message: string;
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ WhatsApp
 * @param phoneNumber –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ +79XXXXXXXXX
 * @param message –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @returns Promise —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –æ—Ç–ø—Ä–∞–≤–∫–∏
 */
export const sendWhatsAppNotification = async (
  phoneNumber: string,
  message: string
): Promise<boolean> => {
  try {
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—Ä–æ—Å –∫ API –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    // –ù–∞–ø—Ä–∏–º–µ—Ä:
    // await api.post('/notifications/whatsapp', { phoneNumber, message });

    // –í –¥–∞–Ω–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ—Å—Ç–æ –∏–º–∏—Ç–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É –∏ –ª–æ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
    console.log(`üì± –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è WhatsApp`, {
      phoneNumber,
      message,
    });

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º true –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
    return true;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ WhatsApp:', error);
    return false;
  }
};

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É –º–∞–≥–∞–∑–∏–Ω–∞ –æ–± –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Å–º–µ–Ω—ã
 * @param shopId ID –º–∞–≥–∞–∑–∏–Ω–∞
 * @param registerName –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Å—Å—ã
 * @param cashierName –ò–º—è –∫–∞—Å—Å–∏—Ä–∞
 * @returns Promise —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –æ—Ç–ø—Ä–∞–≤–∫–∏
 */
export const sendShiftOpenNotification = async (
  shopId: string,
  registerName: string,
  cashierName: string
): Promise<boolean> => {
  try {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –º–∞–≥–∞–∑–∏–Ω–∞
    // const { data } = await api.get(`/shops/${shopId}/manager-phone`);
    // const managerPhone = data.phone;

    // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É
    const managerPhone = '+79000000000';

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    const message = `
üîî *–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ SaudaPro*
‚úÖ –û—Ç–∫—Ä—ã—Ç–∞ —Å–º–µ–Ω–∞ –Ω–∞ –∫–∞—Å—Å–µ "${registerName}"
üë§ –ö–∞—Å—Å–∏—Ä: ${cashierName}
üïí –í—Ä–µ–º—è: ${new Date().toLocaleString()}
üè™ –ú–∞–≥–∞–∑–∏–Ω ID: ${shopId}
    `.trim();

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    return await sendWhatsAppNotification(managerPhone, message);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Å–º–µ–Ω—ã:', error);
    return false;
  }
};

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É –º–∞–≥–∞–∑–∏–Ω–∞ –æ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å–º–µ–Ω—ã
 * @param shopId ID –º–∞–≥–∞–∑–∏–Ω–∞
 * @param registerName –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Å—Å—ã
 * @param cashierName –ò–º—è –∫–∞—Å—Å–∏—Ä–∞
 * @returns Promise —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –æ—Ç–ø—Ä–∞–≤–∫–∏
 */
export const sendShiftCloseNotification = async (
  shopId: string,
  registerName: string,
  cashierName: string
): Promise<boolean> => {
  try {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –º–∞–≥–∞–∑–∏–Ω–∞
    // const { data } = await api.get(`/shops/${shopId}/manager-phone`);
    // const managerPhone = data.phone;

    // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É
    const managerPhone = '+79000000000';

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    const message = `
üîî *–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ SaudaPro*
‚ùå –ó–∞–∫—Ä—ã—Ç–∞ —Å–º–µ–Ω–∞ –Ω–∞ –∫–∞—Å—Å–µ "${registerName}"
üë§ –ö–∞—Å—Å–∏—Ä: ${cashierName}
üïí –í—Ä–µ–º—è: ${new Date().toLocaleString()}
üè™ –ú–∞–≥–∞–∑–∏–Ω ID: ${shopId}
    `.trim();

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    return await sendWhatsAppNotification(managerPhone, message);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å–º–µ–Ω—ã:', error);
    return false;
  }
};

export default {
  sendWhatsAppNotification,
  sendShiftOpenNotification,
  sendShiftCloseNotification,
};
